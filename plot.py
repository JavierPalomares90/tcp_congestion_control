# Python script to plot tcp probe data generated by dumbbell_topo.py
# @author Javier Palomares

import matplotlib.pyplot as plt
import pandas as pd

SHORT_DELAY =  21
MEDIUM_DELAY = 81
LONG_DELAY =  162
DELAYS = [SHORT_DELAY, MEDIUM_DELAY, LONG_DELAY]

TCP_ALGS=['reno','cubic','bic','westwood']

def plot_tcp_data(tcp_alg,delay):
    file_name = 'tcp_probe_{}_{}_ms_delay.txt'.format(tcp_alg,delay)
    column_names = ['Time','Sender','Receiver','Bytes','Next','Unacknowledged','Cwnd','Slow_Start_Thresh','Send_window','rtt','Receive_Window']
    # the time and cwnd for each of the 2 path
    # path one 10.0.0.3 <-> 10.0.0.1 s1<->r1
    # path two 10.0.0.4 <-> 10.0.0.2 s2<->r2
    sender1 = '10.0.0.1'
    sender2 = '10.0.0.2'
    receiver1 = '10.0.0.3'
    receiver2 = '10.0.0.4'
    times1 = []
    cwnds1 = []
    bw1 = []
    times2 = []
    cwnds2 = []
    bw2 = []
    df = pd.read_csv(file_name,names=column_names,delim_whitespace=True)
    # only look at messages from the senders (not from the receivers)
    connection1 = df[df['Sender'].str.match(sender1)]
    connection2 = df[df['Sender'].str.match(sender2)]

    fig = plt.figure()
    ax = connection1.plot(x='Time',y='Cwnd', title='Cwnd vs time for {} at {} ms delay'.format(tcp_alg,delay),color='r')
    connection2.plot(ax=ax,x='Time',y='Cwnd', title='Cwnd vs time for {} at {} ms delay'.format(tcp_alg,delay))
    plt.xlabel('Time (seconds)')
    plt.ylabel('Send congestion window (MSS)')
    plt.legend(loc = 'upper right')
    plt.show()

    ax2 = fig.add_subplot(212)

    ax2.scatter(times1,bw1,c='r',label='source1<->receiver1',linewidths=0.1,alpha=.5)
    ax2.scatter(times2,bw2,c='b',label='source2<->receiver2',linewidths=0.1,alpha=.5)
    plt.title('Bandwidth vs time for {} at {} ms delay'.format(tcp_alg,delay))
    plt.xlabel('Time (seconds)')
    plt.ylabel('Bandwith (Kbps)')
    plt.legend(loc = 'upper right')
    plt.savefig('tcp_probe_{}_{}_ms_delay.png'.format(tcp_alg,delay))
    plt.show()

def main():
    for tcp_alg in TCP_ALGS:
        for delay in DELAYS:
            plot_tcp_data(tcp_alg,delay)



if __name__ == '__main__':
    main()